[0m[1mdocker_image.haproxy_img: Refreshing state... [id=sha256:73c9a6a2e39bb5c805fc9d527f58e5e82f5f51fd44177a04f1f6c540bb976591haproxy:latest][0m
[0m[1mdocker_image.web_img: Refreshing state... [id=sha256:cf49c37eb33018fd1660a652da67dcdbdf55996ae3c22bb80cd733dbf8ded8c6nginxdemos/hello:latest][0m
[0m[1mdocker_image.curl: Refreshing state... [id=sha256:e74447e85ef07be8a848a1fb448615df75fa7ca57f6171663fedcac2fe818044curlimages/curl:latest][0m
[0m[1mdocker_network.labnet: Refreshing state... [id=e3afc5d275f819d3714eb13de35936210d687fc80884e4b397ff4564baa02811][0m
[0m[1mdocker_container.client: Refreshing state... [id=5be9021522873a1b645ceff7d0c5e8bfb1ce30bc949af563e60123b6dfeb345c][0m
[0m[1mdocker_container.web3: Refreshing state... [id=ed98ade1c7c1fff52e0613dbfad3d087c96da740ef0567c47cc3cfd49ff13104][0m
[0m[1mdocker_container.haproxy: Refreshing state... [id=634e33e4f7c0815526a545925e904aa79fac1ad3a04d1290d517fd3743348ef7][0m
[0m[1mdocker_container.web2: Refreshing state... [id=e23d2665a6b249a6d1928d5eada53e1309da6b6f5137f0dc2f4b911284d15eb4][0m
[0m[1mdocker_container.web1: Refreshing state... [id=f2f4e2c3b709939a66869ac96e593bd2b424d39bc763e34d829db7d0b10a99c1][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
[31m-[0m/[32m+[0m destroy and then create replacement[0m

Terraform will perform the following actions:

[1m  # docker_container.client[0m must be [1m[31mreplaced[0m
[0m[31m-[0m/[32m+[0m[0m resource "docker_container" "client" {
      [32m+[0m[0m bridge            = (known after apply)
      [32m+[0m[0m container_logs    = (known after apply)
      [31m-[0m[0m cpu_shares        = 0 [90m-> null[0m[0m
      [33m~[0m[0m dns               = [] -> (known after apply)
      [33m~[0m[0m dns_opts          = [] -> (known after apply)
      [31m-[0m[0m dns_search        = [] [90m-> null[0m[0m
      [33m~[0m[0m entrypoint        = [
          [31m-[0m[0m "/entrypoint.sh",
        ] -> (known after apply)
      [32m+[0m[0m exit_code         = (known after apply)
      [33m~[0m[0m gateway           = "172.28.0.1" -> (known after apply)
      [31m-[0m[0m group_add         = [] [90m-> null[0m[0m
      [33m~[0m[0m hostname          = "5be902152287" -> (known after apply)
      [33m~[0m[0m id                = "5be9021522873a1b645ceff7d0c5e8bfb1ce30bc949af563e60123b6dfeb345c" -> (known after apply)
      [33m~[0m[0m image             = "sha256:e74447e85ef07be8a848a1fb448615df75fa7ca57f6171663fedcac2fe818044" [33m->[0m[0m "curlimages/curl:latest" [31m# forces replacement[0m[0m
      [33m~[0m[0m ip_address        = "172.28.0.20" -> (known after apply)
      [33m~[0m[0m ip_prefix_length  = 16 -> (known after apply)
      [33m~[0m[0m ipc_mode          = "private" -> (known after apply)
      [31m-[0m[0m links             = [] [90m-> null[0m[0m
      [33m~[0m[0m log_driver        = "json-file" -> (known after apply)
      [33m~[0m[0m log_opts          = {} -> (known after apply)
      [31m-[0m[0m max_retry_count   = 0 [90m-> null[0m[0m
      [31m-[0m[0m memory            = 0 [90m-> null[0m[0m
      [31m-[0m[0m memory_swap       = 0 [90m-> null[0m[0m
        name              = "client"
      [33m~[0m[0m network_data      = [
          [31m-[0m[0m {
              [31m-[0m[0m gateway          = "172.28.0.1"
              [31m-[0m[0m ip_address       = "172.28.0.20"
              [31m-[0m[0m ip_prefix_length = 16
              [31m-[0m[0m network_name     = "lab3b_net"
            },
        ] -> (known after apply)
      [31m-[0m[0m network_mode      = "bridge" [90m-> null[0m[0m [31m# forces replacement[0m[0m
      [31m-[0m[0m privileged        = false [90m-> null[0m[0m
      [31m-[0m[0m publish_all_ports = false [90m-> null[0m[0m
      [33m~[0m[0m shm_size          = 64 -> (known after apply)
      [31m-[0m[0m sysctls           = {} [90m-> null[0m[0m
      [31m-[0m[0m tmpfs             = {} [90m-> null[0m[0m
      [33m~[0m[0m user              = "curl_user" -> (known after apply)
      [33m~[0m[0m working_dir       = "/home/curl_user" -> (known after apply)
        [90m# (12 unchanged attributes hidden)[0m[0m

        [90m# (1 unchanged block hidden)[0m[0m
    }

[1m  # docker_container.haproxy[0m must be [1m[31mreplaced[0m
[0m[31m-[0m/[32m+[0m[0m resource "docker_container" "haproxy" {
      [32m+[0m[0m bridge            = (known after apply)
      [33m~[0m[0m command           = [
          [31m-[0m[0m "haproxy",
          [31m-[0m[0m "-f",
          [31m-[0m[0m "/usr/local/etc/haproxy/haproxy.cfg",
        ] -> (known after apply)
      [32m+[0m[0m container_logs    = (known after apply)
      [31m-[0m[0m cpu_shares        = 0 [90m-> null[0m[0m
      [33m~[0m[0m dns               = [] -> (known after apply)
      [33m~[0m[0m dns_opts          = [] -> (known after apply)
      [31m-[0m[0m dns_search        = [] [90m-> null[0m[0m
      [33m~[0m[0m entrypoint        = [
          [31m-[0m[0m "docker-entrypoint.sh",
        ] -> (known after apply)
      [32m+[0m[0m exit_code         = (known after apply)
      [33m~[0m[0m gateway           = "172.28.0.1" -> (known after apply)
      [31m-[0m[0m group_add         = [] [90m-> null[0m[0m
      [33m~[0m[0m hostname          = "634e33e4f7c0" -> (known after apply)
      [33m~[0m[0m id                = "634e33e4f7c0815526a545925e904aa79fac1ad3a04d1290d517fd3743348ef7" -> (known after apply)
      [33m~[0m[0m image             = "sha256:73c9a6a2e39bb5c805fc9d527f58e5e82f5f51fd44177a04f1f6c540bb976591" [33m->[0m[0m "haproxy:latest" [31m# forces replacement[0m[0m
      [33m~[0m[0m ip_address        = "172.28.0.10" -> (known after apply)
      [33m~[0m[0m ip_prefix_length  = 16 -> (known after apply)
      [33m~[0m[0m ipc_mode          = "private" -> (known after apply)
      [31m-[0m[0m links             = [] [90m-> null[0m[0m
      [33m~[0m[0m log_driver        = "json-file" -> (known after apply)
      [33m~[0m[0m log_opts          = {} -> (known after apply)
      [31m-[0m[0m max_retry_count   = 0 [90m-> null[0m[0m
      [31m-[0m[0m memory            = 0 [90m-> null[0m[0m
      [31m-[0m[0m memory_swap       = 0 [90m-> null[0m[0m
        name              = "haproxy"
      [33m~[0m[0m network_data      = [
          [31m-[0m[0m {
              [31m-[0m[0m gateway          = "172.28.0.1"
              [31m-[0m[0m ip_address       = "172.28.0.10"
              [31m-[0m[0m ip_prefix_length = 16
              [31m-[0m[0m network_name     = "lab3b_net"
            },
        ] -> (known after apply)
      [31m-[0m[0m network_mode      = "bridge" [90m-> null[0m[0m [31m# forces replacement[0m[0m
      [31m-[0m[0m privileged        = false [90m-> null[0m[0m
      [31m-[0m[0m publish_all_ports = false [90m-> null[0m[0m
      [33m~[0m[0m shm_size          = 64 -> (known after apply)
      [31m-[0m[0m sysctls           = {} [90m-> null[0m[0m
      [31m-[0m[0m tmpfs             = {} [90m-> null[0m[0m
      [33m~[0m[0m user              = "haproxy" -> (known after apply)
      [33m~[0m[0m working_dir       = "/var/lib/haproxy" -> (known after apply)
        [90m# (11 unchanged attributes hidden)[0m[0m

      [31m-[0m[0m volumes {
          [31m-[0m[0m container_path = "/usr/local/etc/haproxy/haproxy.cfg" [90m-> null[0m[0m
          [31m-[0m[0m host_path      = "/home/jbras/network-virtualization/terraform/haproxy.cfg" [90m-> null[0m[0m
          [31m-[0m[0m read_only      = false [90m-> null[0m[0m
            [90m# (2 unchanged attributes hidden)[0m[0m
        }
      [32m+[0m[0m volumes {
          [32m+[0m[0m container_path = "/usr/local/etc/haproxy/haproxy.cfg"
          [32m+[0m[0m host_path      = "/home/jbras/network-virtualization/terraform/haproxy.cfg"
            [90m# (2 unchanged attributes hidden)[0m[0m
        }

        [90m# (2 unchanged blocks hidden)[0m[0m
    }

[1m  # docker_container.web1[0m must be [1m[31mreplaced[0m
[0m[31m-[0m/[32m+[0m[0m resource "docker_container" "web1" {
      [32m+[0m[0m bridge            = (known after apply)
      [33m~[0m[0m command           = [
          [31m-[0m[0m "nginx",
          [31m-[0m[0m "-g",
          [31m-[0m[0m "daemon off;",
        ] -> (known after apply)
      [32m+[0m[0m container_logs    = (known after apply)
      [31m-[0m[0m cpu_shares        = 0 [90m-> null[0m[0m
      [33m~[0m[0m dns               = [] -> (known after apply)
      [33m~[0m[0m dns_opts          = [] -> (known after apply)
      [31m-[0m[0m dns_search        = [] [90m-> null[0m[0m
      [33m~[0m[0m entrypoint        = [
          [31m-[0m[0m "/docker-entrypoint.sh",
        ] -> (known after apply)
      [32m+[0m[0m exit_code         = (known after apply)
      [33m~[0m[0m gateway           = "172.28.0.1" -> (known after apply)
      [31m-[0m[0m group_add         = [] [90m-> null[0m[0m
      [33m~[0m[0m hostname          = "f2f4e2c3b709" -> (known after apply)
      [33m~[0m[0m id                = "f2f4e2c3b709939a66869ac96e593bd2b424d39bc763e34d829db7d0b10a99c1" -> (known after apply)
      [33m~[0m[0m image             = "sha256:cf49c37eb33018fd1660a652da67dcdbdf55996ae3c22bb80cd733dbf8ded8c6" [33m->[0m[0m "nginxdemos/hello:latest" [31m# forces replacement[0m[0m
      [33m~[0m[0m ip_address        = "172.28.0.11" -> (known after apply)
      [33m~[0m[0m ip_prefix_length  = 16 -> (known after apply)
      [33m~[0m[0m ipc_mode          = "private" -> (known after apply)
      [31m-[0m[0m links             = [] [90m-> null[0m[0m
      [33m~[0m[0m log_driver        = "json-file" -> (known after apply)
      [33m~[0m[0m log_opts          = {} -> (known after apply)
      [31m-[0m[0m max_retry_count   = 0 [90m-> null[0m[0m
      [31m-[0m[0m memory            = 0 [90m-> null[0m[0m
      [31m-[0m[0m memory_swap       = 0 [90m-> null[0m[0m
        name              = "web1"
      [33m~[0m[0m network_data      = [
          [31m-[0m[0m {
              [31m-[0m[0m gateway          = "172.28.0.1"
              [31m-[0m[0m ip_address       = "172.28.0.11"
              [31m-[0m[0m ip_prefix_length = 16
              [31m-[0m[0m network_name     = "lab3b_net"
            },
        ] -> (known after apply)
      [31m-[0m[0m network_mode      = "bridge" [90m-> null[0m[0m [31m# forces replacement[0m[0m
      [31m-[0m[0m privileged        = false [90m-> null[0m[0m
      [31m-[0m[0m publish_all_ports = false [90m-> null[0m[0m
      [33m~[0m[0m shm_size          = 64 -> (known after apply)
      [31m-[0m[0m sysctls           = {} [90m-> null[0m[0m
      [31m-[0m[0m tmpfs             = {} [90m-> null[0m[0m
      [32m+[0m[0m user              = (known after apply)
      [33m~[0m[0m working_dir       = "/" -> (known after apply)
        [90m# (11 unchanged attributes hidden)[0m[0m

        [90m# (1 unchanged block hidden)[0m[0m
    }

[1m  # docker_container.web2[0m must be [1m[31mreplaced[0m
[0m[31m-[0m/[32m+[0m[0m resource "docker_container" "web2" {
      [32m+[0m[0m bridge            = (known after apply)
      [33m~[0m[0m command           = [
          [31m-[0m[0m "nginx",
          [31m-[0m[0m "-g",
          [31m-[0m[0m "daemon off;",
        ] -> (known after apply)
      [32m+[0m[0m container_logs    = (known after apply)
      [31m-[0m[0m cpu_shares        = 0 [90m-> null[0m[0m
      [33m~[0m[0m dns               = [] -> (known after apply)
      [33m~[0m[0m dns_opts          = [] -> (known after apply)
      [31m-[0m[0m dns_search        = [] [90m-> null[0m[0m
      [33m~[0m[0m entrypoint        = [
          [31m-[0m[0m "/docker-entrypoint.sh",
        ] -> (known after apply)
      [32m+[0m[0m exit_code         = (known after apply)
      [33m~[0m[0m gateway           = "172.28.0.1" -> (known after apply)
      [31m-[0m[0m group_add         = [] [90m-> null[0m[0m
      [33m~[0m[0m hostname          = "e23d2665a6b2" -> (known after apply)
      [33m~[0m[0m id                = "e23d2665a6b249a6d1928d5eada53e1309da6b6f5137f0dc2f4b911284d15eb4" -> (known after apply)
      [33m~[0m[0m image             = "sha256:cf49c37eb33018fd1660a652da67dcdbdf55996ae3c22bb80cd733dbf8ded8c6" [33m->[0m[0m "nginxdemos/hello:latest" [31m# forces replacement[0m[0m
      [33m~[0m[0m ip_address        = "172.28.0.12" -> (known after apply)
      [33m~[0m[0m ip_prefix_length  = 16 -> (known after apply)
      [33m~[0m[0m ipc_mode          = "private" -> (known after apply)
      [31m-[0m[0m links             = [] [90m-> null[0m[0m
      [33m~[0m[0m log_driver        = "json-file" -> (known after apply)
      [33m~[0m[0m log_opts          = {} -> (known after apply)
      [31m-[0m[0m max_retry_count   = 0 [90m-> null[0m[0m
      [31m-[0m[0m memory            = 0 [90m-> null[0m[0m
      [31m-[0m[0m memory_swap       = 0 [90m-> null[0m[0m
        name              = "web2"
      [33m~[0m[0m network_data      = [
          [31m-[0m[0m {
              [31m-[0m[0m gateway          = "172.28.0.1"
              [31m-[0m[0m ip_address       = "172.28.0.12"
              [31m-[0m[0m ip_prefix_length = 16
              [31m-[0m[0m network_name     = "lab3b_net"
            },
        ] -> (known after apply)
      [31m-[0m[0m network_mode      = "bridge" [90m-> null[0m[0m [31m# forces replacement[0m[0m
      [31m-[0m[0m privileged        = false [90m-> null[0m[0m
      [31m-[0m[0m publish_all_ports = false [90m-> null[0m[0m
      [33m~[0m[0m shm_size          = 64 -> (known after apply)
      [31m-[0m[0m sysctls           = {} [90m-> null[0m[0m
      [31m-[0m[0m tmpfs             = {} [90m-> null[0m[0m
      [32m+[0m[0m user              = (known after apply)
      [33m~[0m[0m working_dir       = "/" -> (known after apply)
        [90m# (11 unchanged attributes hidden)[0m[0m

        [90m# (1 unchanged block hidden)[0m[0m
    }

[1m  # docker_container.web3[0m must be [1m[31mreplaced[0m
[0m[31m-[0m/[32m+[0m[0m resource "docker_container" "web3" {
      [32m+[0m[0m bridge            = (known after apply)
      [33m~[0m[0m command           = [
          [31m-[0m[0m "nginx",
          [31m-[0m[0m "-g",
          [31m-[0m[0m "daemon off;",
        ] -> (known after apply)
      [32m+[0m[0m container_logs    = (known after apply)
      [31m-[0m[0m cpu_shares        = 0 [90m-> null[0m[0m
      [33m~[0m[0m dns               = [] -> (known after apply)
      [33m~[0m[0m dns_opts          = [] -> (known after apply)
      [31m-[0m[0m dns_search        = [] [90m-> null[0m[0m
      [33m~[0m[0m entrypoint        = [
          [31m-[0m[0m "/docker-entrypoint.sh",
        ] -> (known after apply)
      [32m+[0m[0m exit_code         = (known after apply)
      [33m~[0m[0m gateway           = "172.28.0.1" -> (known after apply)
      [31m-[0m[0m group_add         = [] [90m-> null[0m[0m
      [33m~[0m[0m hostname          = "ed98ade1c7c1" -> (known after apply)
      [33m~[0m[0m id                = "ed98ade1c7c1fff52e0613dbfad3d087c96da740ef0567c47cc3cfd49ff13104" -> (known after apply)
      [33m~[0m[0m image             = "sha256:cf49c37eb33018fd1660a652da67dcdbdf55996ae3c22bb80cd733dbf8ded8c6" [33m->[0m[0m "nginxdemos/hello:latest" [31m# forces replacement[0m[0m
      [33m~[0m[0m ip_address        = "172.28.0.13" -> (known after apply)
      [33m~[0m[0m ip_prefix_length  = 16 -> (known after apply)
      [33m~[0m[0m ipc_mode          = "private" -> (known after apply)
      [31m-[0m[0m links             = [] [90m-> null[0m[0m
      [33m~[0m[0m log_driver        = "json-file" -> (known after apply)
      [33m~[0m[0m log_opts          = {} -> (known after apply)
      [31m-[0m[0m max_retry_count   = 0 [90m-> null[0m[0m
      [31m-[0m[0m memory            = 0 [90m-> null[0m[0m
      [31m-[0m[0m memory_swap       = 0 [90m-> null[0m[0m
        name              = "web3"
      [33m~[0m[0m network_data      = [
          [31m-[0m[0m {
              [31m-[0m[0m gateway          = "172.28.0.1"
              [31m-[0m[0m ip_address       = "172.28.0.13"
              [31m-[0m[0m ip_prefix_length = 16
              [31m-[0m[0m network_name     = "lab3b_net"
            },
        ] -> (known after apply)
      [31m-[0m[0m network_mode      = "bridge" [90m-> null[0m[0m [31m# forces replacement[0m[0m
      [31m-[0m[0m privileged        = false [90m-> null[0m[0m
      [31m-[0m[0m publish_all_ports = false [90m-> null[0m[0m
      [33m~[0m[0m shm_size          = 64 -> (known after apply)
      [31m-[0m[0m sysctls           = {} [90m-> null[0m[0m
      [31m-[0m[0m tmpfs             = {} [90m-> null[0m[0m
      [32m+[0m[0m user              = (known after apply)
      [33m~[0m[0m working_dir       = "/" -> (known after apply)
        [90m# (11 unchanged attributes hidden)[0m[0m

        [90m# (1 unchanged block hidden)[0m[0m
    }

[1mPlan:[0m 5 to add, 0 to change, 5 to destroy.
[0m[0m[1mdocker_container.web1: Destroying... [id=f2f4e2c3b709939a66869ac96e593bd2b424d39bc763e34d829db7d0b10a99c1][0m[0m
[0m[1mdocker_container.web2: Destroying... [id=e23d2665a6b249a6d1928d5eada53e1309da6b6f5137f0dc2f4b911284d15eb4][0m[0m
[0m[1mdocker_container.client: Destroying... [id=5be9021522873a1b645ceff7d0c5e8bfb1ce30bc949af563e60123b6dfeb345c][0m[0m
[0m[1mdocker_container.web3: Destroying... [id=ed98ade1c7c1fff52e0613dbfad3d087c96da740ef0567c47cc3cfd49ff13104][0m[0m
[0m[1mdocker_container.haproxy: Destroying... [id=634e33e4f7c0815526a545925e904aa79fac1ad3a04d1290d517fd3743348ef7][0m[0m
[0m[1mdocker_container.haproxy: Destruction complete after 0s[0m
[0m[1mdocker_container.web3: Destruction complete after 0s[0m
[0m[1mdocker_container.haproxy: Creating...[0m[0m
[0m[1mdocker_container.web3: Creating...[0m[0m
[0m[1mdocker_container.client: Destruction complete after 0s[0m
[0m[1mdocker_container.web1: Destruction complete after 0s[0m
[0m[1mdocker_container.client: Creating...[0m[0m
[0m[1mdocker_container.web2: Destruction complete after 0s[0m
[0m[1mdocker_container.web1: Creating...[0m[0m
[0m[1mdocker_container.web2: Creating...[0m[0m
[0m[1mdocker_container.haproxy: Creation complete after 0s [id=f3d5076ce5708314334c1cdf0e45bfc6717771eb68f7c066d23f5ca833f4385c][0m
[0m[1mdocker_container.web3: Creation complete after 0s [id=da1cacfa55b68a66db0fd18e85a0176b3fcb10b2e480673f17f7c1d9951a1c53][0m
[0m[1mdocker_container.client: Creation complete after 1s [id=28666b49554a77e3068dbb22396cc68935bc5c749217fa8f9480d4fc599e15fb][0m
[0m[1mdocker_container.web2: Creation complete after 1s [id=e2219dd26086af9f772eb2aaa6d52e2ce98035c23f71062c988b15537bee3eeb][0m
[0m[1mdocker_container.web1: Creation complete after 1s [id=5fc1815ffb565af453ad581cd84b068568be450a52a08346a5d95657073fbd0b][0m
[0m[1m[32m
Apply complete! Resources: 5 added, 0 changed, 5 destroyed.
[0m